# LSH Daemon Environment Configuration
# Copy this file to .env and fill in your actual values
# DO NOT commit .env to version control

# =============================================================================
# LSH Daemon API Configuration
# =============================================================================

# LSH API URL - URL where the LSH daemon is deployed
# For local development: http://localhost:3030
# For fly.io deployment: https://your-lsh-app.fly.dev
# For existing Elixir app: https://your-elixir-app.fly.dev/api
LSH_API_URL=http://localhost:3030

# LSH API Key - Secure authentication key for LSH API
# Generate with: python -c "import secrets; print(secrets.token_urlsafe(32))"
LSH_API_KEY=your_secure_api_key_here

# =============================================================================
# Supabase Configuration
# =============================================================================

# Supabase Project URL
SUPABASE_URL=https://your-project.supabase.co

# Supabase Anonymous Key (for public/read operations)
SUPABASE_KEY=your_supabase_anon_key_here

# Supabase Service Role Key (for admin operations - keep secure!)
SUPABASE_SERVICE_ROLE_KEY=your_supabase_service_role_key_here

# =============================================================================
# mcli Dashboard Configuration (for Streamlit)
# =============================================================================

# Enable LSH integration in dashboard
MCLI_ENABLE_LSH=true

# Auto-refresh interval for LSH jobs (seconds)
MCLI_LSH_REFRESH_INTERVAL=30

# =============================================================================
# LSH Daemon Settings (for daemon itself)
# =============================================================================

# Port for LSH daemon to listen on
PORT=3030

# Log level (debug, info, warning, error)
LSH_LOG_LEVEL=info

# Maximum concurrent jobs
LSH_MAX_CONCURRENT_JOBS=10

# Job execution timeout (seconds)
LSH_JOB_TIMEOUT=300

# Enable command caching
LSH_ENABLE_CACHING=true

# Enable command execution history
LSH_ENABLE_HISTORY=true

# =============================================================================
# Optional: Advanced Configuration
# =============================================================================

# Database path for local daemon (SQLite)
LSH_DB_PATH=~/.local/mcli/daemon/commands.db

# PID file location
LSH_PID_FILE=~/.local/mcli/daemon/daemon.pid

# Socket file location
LSH_SOCKET_FILE=~/.local/mcli/daemon/daemon.sock

# Command watch directory
LSH_COMMAND_DIR=~/.local/mcli/daemon/commands

# =============================================================================
# fly.io Deployment Variables (set via fly secrets)
# =============================================================================

# Set these using: fly secrets set KEY=value -a your-app-name
# - LSH_API_KEY
# - SUPABASE_URL
# - SUPABASE_KEY
# - SUPABASE_SERVICE_ROLE_KEY

# =============================================================================
# Security Notes
# =============================================================================

# ⚠️  IMPORTANT:
# 1. Never commit this file with real values to git
# 2. Keep .env in .gitignore
# 3. Use strong, randomly generated API keys
# 4. Rotate keys regularly
# 5. Use different keys for dev/staging/production
# 6. For fly.io, use `fly secrets set` instead of .env

# Generate secure API key:
# python -c "import secrets; print(secrets.token_urlsafe(32))"

# Example secure key:
# LSH_API_KEY=xK7mP9nQ2sT4vW8yZ1bC3dF5gH7jK9mN0pR2tV4wX6zA8cE0

# =============================================================================
# Quick Start
# =============================================================================

# 1. Copy this file:
#    cp .env.lsh.example .env

# 2. Generate an API key:
#    python -c "import secrets; print(secrets.token_urlsafe(32))"

# 3. Fill in your Supabase credentials from https://supabase.com/dashboard

# 4. For local development, use:
#    LSH_API_URL=http://localhost:3030

# 5. For fly.io deployment, use:
#    LSH_API_URL=https://your-lsh-app.fly.dev

# 6. Start LSH daemon:
#    python -m mcli.workflow.daemon.api_daemon start --port 3030

# 7. Test connection:
#    mcli lsh-status
