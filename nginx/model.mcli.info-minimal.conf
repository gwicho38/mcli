# Minimal Nginx configuration for MCLI Model Service
# For use with existing router SSL setup
#
# This assumes:
# - SSL certificates already exist and are managed by your router
# - You just need to add this service to your existing nginx setup

server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name model.mcli.info;

    # Use your existing SSL certificate setup
    # Update these paths to match where your router stores SSL certificates
    ssl_certificate /etc/nginx/ssl/model.mcli.info.crt;
    ssl_certificate_key /etc/nginx/ssl/model.mcli.info.key;

    # Or if using a wildcard certificate:
    # ssl_certificate /etc/nginx/ssl/wildcard.mcli.info.crt;
    # ssl_certificate_key /etc/nginx/ssl/wildcard.mcli.info.key;

    # SSL Configuration (Modern, secure settings)
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-CHACHA20-POLY1305;
    ssl_prefer_server_ciphers off;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;

    # Security Headers
    add_header Strict-Transport-Security "max-age=63072000; includeSubDomains" always;
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;

    # Logging
    access_log /var/log/nginx/model.mcli.info.access.log;
    error_log /var/log/nginx/model.mcli.info.error.log;

    # Proxy to MCLI service on internal network
    location / {
        proxy_pass http://192.168.8.100:51234;

        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        # WebSocket support
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";

        # Timeouts
        proxy_connect_timeout 60s;
        proxy_send_timeout 60s;
        proxy_read_timeout 300s;

        # Disable buffering for streaming responses
        proxy_buffering off;
        proxy_request_buffering off;
    }

    # Health check endpoint (no auth required)
    location /health {
        proxy_pass http://192.168.8.100:51234/health;
        access_log off;
    }

    # Chat completions with rate limiting
    location /v1/chat/completions {
        # Apply rate limit (configure in main nginx.conf: limit_req_zone $binary_remote_addr zone=api_limit:10m rate=10r/m;)
        limit_req zone=api_limit burst=5 nodelay;

        proxy_pass http://192.168.8.100:51234/v1/chat/completions;

        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        # Longer timeout for completions
        proxy_read_timeout 600s;

        # Disable buffering for streaming
        proxy_buffering off;
        proxy_request_buffering off;
    }
}

# Optional: HTTP to HTTPS redirect
# Comment this out if your router already handles this globally
server {
    listen 80;
    listen [::]:80;
    server_name model.mcli.info;

    return 301 https://$server_name$request_uri;
}
