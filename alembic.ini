# Alembic Configuration File

[alembic]
# path to migration scripts
script_location = src/mcli/ml/database/migrations

# template used to generate migration file names
file_template = %%(year)d%%(month).2d%%(day).2d_%%(hour).2d%%(minute).2d-%%(rev)s_%%(slug)s

# sys.path path, will be prepended to sys.path if present
prepend_sys_path = .

# timezone to use when rendering the date within the migration file
# as well as the filename
timezone = UTC

# max length of characters to apply to the "slug" field
truncate_slug_length = 40

# set to 'true' to run the environment during
# the 'revision' command, regardless of autogenerate
revision_environment = false

# set to 'true' to allow .pyc and .pyo files without
# a source .py file to be detected as revisions in the
# versions/ directory
sourceless = false

# version location specification
version_locations = %(here)s/src/mcli/ml/database/migrations/versions

# the output encoding used when revision files
# are written from script.py.mako
output_encoding = utf-8

# database connection URL
# Will be overridden by environment variable
sqlalchemy.url = postgresql://ml_user:password@localhost:5432/ml_system


[post_write_hooks]
# post_write_hooks defines scripts or executables to be run
# on newly generated revision scripts
hooks = black, isort

# format using black
black.type = console_scripts
black.entrypoint = black
black.options = -l 100

# sort imports using isort
isort.type = console_scripts
isort.entrypoint = isort
isort.options = --profile black


# Logging configuration
[loggers]
keys = root,sqlalchemy,alembic

[handlers]
keys = console

[formatters]
keys = generic

[logger_root]
level = WARN
handlers = console
qualname =

[logger_sqlalchemy]
level = WARN
handlers =
qualname = sqlalchemy.engine

[logger_alembic]
level = INFO
handlers =
qualname = alembic

[handler_console]
class = StreamHandler
args = (sys.stderr,)
level = NOTSET
formatter = generic

[formatter_generic]
format = %(levelname)-5.5s [%(name)s] %(message)s
datefmt = %H:%M:%S