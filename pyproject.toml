[project]
name = "mcli"
version = "3.0.0"
description = "Add your description here"
readme = "README.md"
requires-python = ">=3.9"
authors = [{ name = "mcli", email = "luis@lefv.io" }]
maintainers = [
  { name = "Luis Fernandez de la Vara", email = "luis@lefv.io" },
]
license = "MIT"
keywords = ["cli", "shell", "mcli", "sh"]
classifiers = [
  "Topic :: Software Development :: Build Tools",
  "Topic :: Software Development :: Libraries :: Python Modules",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
]
dependencies = [
  "click>=8.1.7,<9.0.0",
  "ipython>=8.12.0,<9.0.0",
  "pandoc>=2.3,<3.0",
  "ptpython>=3.0.23,<4.0.0",
  "setuptools>=65.0.0,<66.0.0",
  "watchdog>=3.0.0,<4.0.0",
  "openai>=1.3.0,<2.0.0",
  "gitpython>=3.1.40,<4.0.0",
  "pygithub>=1.59.0,<2.0.0",
  "numpy>=1.24.0,<2.0.0",
  "flask>=2.3.0,<3.0.0",
  "keras>=2.15.0,<3.0.0",
  "scikit-learn>=1.3.0,<2.0.0",
  "docker>=6.1.0,<7.0.0",
  "fuzzywuzzy>=0.18.0,<0.19.0",
  "pandas>=2.0.3,<3.0.0",
  "openpyxl>=3.1.2,<4.0.0",
  "cachetools>=5.3.2,<6.0.0",
  "ipywidgets>=8.1.1,<9.0.0",
  "inquirerpy>=0.3.4,<0.4.0",
  "requests>=2.31.0,<3.0.0",
  "cython>=3.0.0,<4.0.0",
  "tqdm>=4.66.1,<5.0.0",
  "humanize>=4.9.0,<5.0.0",
  "matplotlib>=3.7.3,<4.0.0",
  "networkx>=3.1,<4.0.0",
  "python-levenshtein>=0.27.1,<0.28.0",
  "nuitka>=2.6.8,<3.0.0",
  "rich>=14.0.0",
  "timeout>=0.1.2",
  "pydot>=3.0.4",
  "psutil>=5.9.0,<6.0.0",
  "pytest>=8.3.5",
  "ipykernel>=6.29.5",
  "opencv-python>=4.11.0.86",
  "pillow>=11.2.1",
  "graphviz>=0.20.3",
  "scikit-image>=0.24.0",
  "scipy>=1.13.1",
  "cryptography>=44.0.2",
  "tomli>=2.2.1",
  "csvkit>=2.1.0",
  "xlsxwriter>=3.2.3",
  "pymupdf>=1.26.1",
]

[project.optional-dependencies]
dev = [
  "pytest-cov>=4.1.0,<5.0.0",
  "isort>=5.12.0,<6.0.0",
  "mypy>=1.7.1,<2.0.0",
  "pylint>=3.0.2,<4.0.0",
]

[tool.black]
line-length = 100
include = '\.pyi?$'
exclude = '''
/(
    \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 100

[build-system]
requires = ["setuptools>=65.0.0", "wheel>=0.40.0", "Cython>=0.29.33"]
build-backend = "setuptools.build_meta"

[tool.setuptools]
packages = { find = { where = ["src"] } }
include-package-data = true

[tool.setuptools.package-data]
mcli = ["**/*.so", "private/lpy/**/*", "public/mcli/**/*"]

[tool.setuptools.exclude-package-data]
mcli = ["**/tests/**/*", "**/__pycache__/**/*"]

[tool.uv.workspace]
members = [
    "src/mcli/workflow/professional",
]

[project.scripts]
mcli = "mcli.app.main:main"
