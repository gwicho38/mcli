[project]
name = "mcli"
version = "5.0.0"
description = "ðŸš€ High-performance CLI framework with Rust extensions, AI chat, and stunning visuals"
readme = "README.md"
requires-python = ">=3.9"
authors = [{ name = "Luis Fernandez de la Vara", email = "luis@lefv.io" }]
maintainers = [{ name = "Luis Fernandez de la Vara", email = "luis@lefv.io" }]
license = { text = "MIT" }
keywords = [
  "cli", "command-line", "framework", "chat", "assistant", "rust", "performance",
  "visual", "tui", "terminal", "ai", "openai", "anthropic", "productivity"
]
classifiers = [
  "Development Status :: 4 - Beta",
  "Environment :: Console",
  "Intended Audience :: Developers",
  "Intended Audience :: System Administrators",
  "License :: OSI Approved :: MIT License",
  "Operating System :: OS Independent",
  "Operating System :: POSIX :: Linux",
  "Operating System :: MacOS",
  "Operating System :: Microsoft :: Windows",
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Rust",
  "Topic :: Software Development :: Libraries :: Python Modules",
  "Topic :: System :: Shells",
  "Topic :: System :: Systems Administration",
  "Topic :: Terminals",
  "Topic :: Utilities",
  "Topic :: Scientific/Engineering :: Artificial Intelligence",
  "Typing :: Typed",
]
dependencies = [
  # Core dependencies
  "click>=8.1.7,<9.0.0",
  "rich>=14.0.0",
  "requests>=2.31.0,<3.0.0",
  "tomli>=2.2.1",
  # Chat and AI capabilities
  "openai>=1.3.0,<2.0.0",
  "anthropic>=0.60.0",
  # Async and performance
  "fastapi>=0.110.0",
  "uvicorn>=0.27.0",
  "uvloop>=0.19.0",
  "aiosqlite>=0.20.0",
  "redis>=5.0.0",
  # Utilities
  "watchdog>=3.0.0,<4.0.0",
  "tqdm>=4.66.1,<5.0.0",
  "humanize>=4.9.0,<5.0.0",
  "psutil>=5.9.0,<6.0.0",
  # Development and interactive features
  "ipython>=8.12.0,<9.0.0",
  "inquirerpy>=0.3.4,<0.4.0",
  # Additional dependencies used by the code
  "flask>=2.3.0,<3.0.0",
  "gitpython>=3.1.40,<4.0.0",
  "maturin>=1.9.3",
  "build>=1.2.2.post1",
]

[project.urls]
"Homepage" = "https://github.com/lefv/mcli"
"Repository" = "https://github.com/lefv/mcli"
"Documentation" = "https://github.com/lefv/mcli#readme"
"Issues" = "https://github.com/lefv/mcli/issues"
"Changelog" = "https://github.com/lefv/mcli/releases"
"Source" = "https://github.com/lefv/mcli"

[project.optional-dependencies]
dev = [
  "pytest>=8.3.5",
  "pytest-cov>=4.1.0,<5.0.0",
  "black>=23.0.0",
  "isort>=5.12.0,<6.0.0",
  "mypy>=1.7.1,<2.0.0",
  "build>=1.2.2.post1",
]
video = [
  "opencv-python>=4.11.0.86",
  "pillow>=11.2.1",
  "numpy>=1.24.0,<2.0.0",
]

[tool.black]
line-length = 100
include = '\.pyi?$'
exclude = '''
/(
    \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 100

[build-system]
requires = ["setuptools>=65.0.0", "wheel>=0.40.0"]
build-backend = "setuptools.build_meta"

[tool.setuptools]
packages = { find = { where = ["src"] } }
include-package-data = true

[tool.setuptools.exclude-package-data]
mcli = ["**/tests/**/*", "**/__pycache__/**/*"]

[project.scripts]
mcli = "mcli.app.main:main"
