# Tox configuration for MCLI
# https://tox.readthedocs.io/

[tox]
min_version = 4.0
env_list =
    py{39,310,311,312}
    lint
    type
    security
    docs
isolated_build = true
skip_missing_interpreters = true

[testenv]
description = Run unit tests with pytest
deps =
    pytest>=8.4.1
    pytest-cov>=4.1.0
    pytest-xdist>=3.5.0
    pytest-timeout>=2.2.0
commands =
    pytest {posargs:tests/}

[testenv:py{39,310,311,312}-fast]
description = Run fast tests only (skip slow tests)
commands =
    pytest -m "not slow" {posargs:tests/}

[testenv:py{39,310,311,312}-cov]
description = Run tests with coverage reporting
commands =
    pytest --cov=src/mcli --cov-report=term-missing --cov-report=html --cov-report=xml {posargs:tests/}

[testenv:lint]
description = Run all linting tools
skip_install = false
deps =
    black>=25.1.0
    isort>=5.13.2
    flake8>=7.0.0
    flake8-docstrings>=1.7.0
    flake8-bugbear>=24.1.0
    flake8-comprehensions>=3.14.0
    flake8-simplify>=0.21.0
commands =
    black --check src/ tests/
    isort --check-only src/ tests/
    flake8 src/ tests/

[testenv:format]
description = Auto-format code with black and isort
skip_install = true
deps =
    black>=25.1.0
    isort>=5.13.2
commands =
    black src/ tests/
    isort src/ tests/

[testenv:type]
description = Run mypy type checking
deps =
    mypy>=1.16.1
    types-requests
    types-toml
commands =
    mypy src/

[testenv:security]
description = Run security checks with bandit
deps =
    bandit>=1.7.0
commands =
    bandit -r src/ -ll

[testenv:docs]
description = Build documentation
skip_install = false
deps =
    sphinx>=7.2.0
    sphinx-rtd-theme>=2.0.0
    sphinx-click>=5.1.0
changedir = docs
commands =
    sphinx-build -W -b html . _build/html

[testenv:clean]
description = Clean up temporary files and caches
skip_install = true
allowlist_externals =
    rm
    find
commands =
    rm -rf .tox
    rm -rf build
    rm -rf dist
    rm -rf .pytest_cache
    rm -rf htmlcov
    rm -rf .coverage
    rm -rf .mypy_cache
    find . -type d -name __pycache__ -exec rm -rf {} +
    find . -type f -name "*.pyc" -delete

[testenv:build]
description = Build distribution packages
skip_install = true
deps =
    build>=1.0.0
    wheel>=0.42.0
commands =
    python -m build

# Configuration for pytest when run via tox
[pytest]
testpaths = tests
python_files = test_*.py
python_classes = Test*
python_functions = test_*
markers =
    unit: Unit tests
    integration: Integration tests
    slow: Slow tests
    cli: CLI tests
    e2e: End-to-end tests

# Configuration for coverage when run via tox
[coverage:run]
source = src/mcli
omit =
    */tests/*
    */__pycache__/*
    */venv/*
    */.venv/*

[coverage:report]
exclude_lines =
    pragma: no cover
    def __repr__
    raise AssertionError
    raise NotImplementedError
    if __name__ == .__main__.:
show_missing = true
precision = 2
fail_under = 30.0
