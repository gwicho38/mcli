# MCLI Environment Configuration
# Copy this file to .env and fill in your actual values
# DO NOT commit the .env file with real credentials

# =============================================================================
# CORE MCLI CONFIGURATION
# =============================================================================

# MCLI Configuration file path (optional)
# MCLI_CONFIG=/path/to/your/config.toml

# MCLI Plugin path (optional)
# MCLI_PLUGIN_PATH=/path/to/plugins

# MCLI Environment (development, staging, production)
# MCLI_ENV=development

# =============================================================================
# DEBUG AND TRACING
# =============================================================================

# Enable debug mode (true/false)
# MCLI_DEBUG=false

# Trace level for debugging (1-5, higher = more verbose)
# MCLI_TRACE_LEVEL=1

# Show performance summary (true/false)
# MCLI_SHOW_PERFORMANCE_SUMMARY=false

# Show optimization details (true/false)
# MCLI_SHOW_OPTIMIZATIONS=false

# =============================================================================
# API SERVICES
# =============================================================================

# OpenAI API Key (required for AI chat functionality)
OPENAI_API_KEY=your-openai-api-key-here

# Anthropic API Key (required for Claude integration)
ANTHROPIC_API_KEY=your-anthropic-api-key-here

# =============================================================================
# SUPABASE CONFIGURATION
# =============================================================================

# Supabase Project URL (required for politician trading features)
SUPABASE_URL=https://your-project.supabase.co

# Supabase Anonymous Key (required for basic operations)
SUPABASE_ANON_KEY=your-supabase-anon-key-here

# Supabase Service Role Key (required for admin operations)
SUPABASE_SERVICE_ROLE_KEY=your-supabase-service-role-key-here

# =============================================================================
# API DAEMON CONFIGURATION
# =============================================================================

# Enable API daemon (true/false)
# MCLI_API_DAEMON_ENABLED=false

# API daemon host
# MCLI_API_DAEMON_HOST=localhost

# API daemon port
# MCLI_API_DAEMON_PORT=8000

# API daemon debug mode (true/false)
# MCLI_API_DAEMON_DEBUG=false

# Auto-start API daemon (true/false)
# MCLI_API_DAEMON_AUTO_START=false

# =============================================================================
# API SERVER CONFIGURATION
# =============================================================================

# Enable API server (true/false)
# MCLI_API_SERVER=false

# API server host
# MCLI_API_HOST=localhost

# API server port
# MCLI_API_PORT=8080

# API server debug mode (true/false)
# MCLI_API_DEBUG=false

# =============================================================================
# PERFORMANCE OPTIMIZATION
# =============================================================================

# Auto-optimize performance (true/false)
# MCLI_AUTO_OPTIMIZE=true

# Disable uvloop event loop (true/false)
# MCLI_DISABLE_UVLOOP=false

# Enable uvloop verbose logging (true/false)
# MCLI_VERBOSE_UVLOOP=false

# Enable large cache for high-memory systems (true/false)
# MCLI_LARGE_CACHE=false

# Enable low memory mode (true/false)
# MCLI_LOW_MEMORY=false

# Number of parallel workers (auto-detected if not set)
# MCLI_PARALLEL_WORKERS=4

# Enable aggressive caching (true/false)
# MCLI_AGGRESSIVE_CACHE=false

# Monitor async tasks (true/false)
# MCLI_MONITOR_TASKS=false

# =============================================================================
# DAEMON AND ROUTING
# =============================================================================

# Enable daemon routing (true/false)
# MCLI_DAEMON_ROUTING=false

# =============================================================================
# EXTERNAL SERVICES (if used)
# =============================================================================

# Redis configuration (if using Redis)
# REDIS_HOST=localhost
# REDIS_PORT=6379
# REDIS_PASSWORD=your-redis-password
# REDIS_DB=0

# Database configuration (if using external database)
# DATABASE_URL=postgresql://user:password@localhost:5432/mcli

# =============================================================================
# ML SYSTEM CONFIGURATION
# =============================================================================

# Environment
ENVIRONMENT=development
DEBUG=true

# Database Configuration for ML System
DB_HOST=localhost
DB_PORT=5432
DB_NAME=ml_system
DB_USER=ml_user
DB_PASSWORD=your_db_password

# MLflow Configuration
MLFLOW_TRACKING_URI=http://localhost:5000
MLFLOW_EXPERIMENT_NAME=politician_trading
MLFLOW_USERNAME=
MLFLOW_PASSWORD=

# Model Configuration
MODEL_BATCH_SIZE=32
MODEL_LEARNING_RATE=0.001
MODEL_EPOCHS=100
MODEL_DEVICE=auto
MODEL_NUM_WORKERS=4
MODEL_SERVING_HOST=0.0.0.0
MODEL_SERVING_PORT=8000

# Data Configuration
DATA_CHUNK_SIZE=10000
DATA_MAX_FILE_SIZE=104857600  # 100MB
DVC_REMOTE=local

# API Configuration for ML Services
API_HOST=0.0.0.0
API_PORT=8000
API_WORKERS=1
API_SECRET_KEY=your-secret-key-here
API_ALGORITHM=HS256
API_ACCESS_TOKEN_EXPIRE_MINUTES=30
API_RATE_LIMIT=100

# Financial Data API Keys
API_ALPHA_VANTAGE_KEY=your_alpha_vantage_key
API_POLYGON_KEY=your_polygon_key
API_QUIVER_KEY=your_quiver_key

# Monitoring Configuration
MONITORING_METRICS_PORT=9090
MONITORING_ENABLE_METRICS=true
MONITORING_LOG_LEVEL=INFO
MONITORING_LOG_FORMAT=structured
MONITORING_ENABLE_ALERTS=true
MONITORING_ALERT_WEBHOOK_URL=
MONITORING_DRIFT_CHECK_INTERVAL=3600
MONITORING_DRIFT_THRESHOLD=0.05

# Security Configuration
SECURITY_ENABLE_AUTH=true
SECURITY_ADMIN_USERNAME=admin
SECURITY_ADMIN_PASSWORD=change_me_in_production
SECURITY_SSL_CERT_PATH=
SECURITY_SSL_KEY_PATH=
SECURITY_CORS_ORIGINS=["*"]

# AWS Configuration (for S3 storage)
AWS_ACCESS_KEY_ID=
AWS_SECRET_ACCESS_KEY=
AWS_DEFAULT_REGION=us-east-1
AWS_S3_BUCKET=ml-models-bucket

# Kafka Configuration (for streaming)
KAFKA_BOOTSTRAP_SERVERS=localhost:9092
KAFKA_TOPIC_PREFIX=ml_system
KAFKA_GROUP_ID=ml_processor

# Performance Tuning for ML
PYTORCH_NUM_THREADS=4
OMP_NUM_THREADS=4
MKL_NUM_THREADS=4

# =============================================================================
# CLOUD PROVIDER CONFIGURATION (if using)
# =============================================================================

# mcli Directory (if using custom mcli integration)
# mcli_DIR=/path/to/mcli

# mcli Server Root (if using custom mcli integration)
# mcli_SERVER_ROOT=https://your-mcli-server.com

# =============================================================================
# DEVELOPMENT SETTINGS
# =============================================================================

# Python optimization level (set to 1 for production)
# PYTHONOPTIMIZE=0

# Python path modifications (if needed)
# PYTHONPATH=/additional/python/paths

# =============================================================================
# NOTES
# =============================================================================
#
# 1. Required variables (uncomment and fill):
#    - OPENAI_API_KEY (for AI chat)
#    - ANTHROPIC_API_KEY (for Claude integration)
#    - SUPABASE_URL (for politician trading features)
#    - SUPABASE_ANON_KEY (for Supabase access)
#    - SUPABASE_SERVICE_ROLE_KEY (for admin operations)
#
# 2. Optional variables are commented out with default values
#    Uncomment and modify as needed for your setup
#
# 3. Boolean values: use "true"/"false", "1"/"0", or "yes"/"no"
#
# 4. For security, never commit your .env file to version control
#
# 5. Restart the application after changing environment variables
#